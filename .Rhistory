#replaces the date colum with the POSIXct values
a[,1]<-c2
# getting the desired date ranges in POSIXct form to allow subsetting to be used
e1<-as.POSIXct("2007-02-01", format="%Y-%m-%d")
e2<-as.POSIXct("2007-02-03", format="%Y-%m-%d")
# Getting the subset of the data between Date 2007-02-01 and 2007-02-02
d1<-subset(a,a[,1]>=e1)
d2<-subset(d1,d1[,1]<e2)
#create a vector of the lables
l<- colnames(d2)
#Take out the Global Active Power Column
f1<-d2[[3]]
#factors to character vectors
f2<-as.character(f1)
# Character Vector to numeric
f3<-as.numeric(f2)
#Histogram of Global Active Power
hist(f3, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
# loads the library necessary for creating the png file
library("datasets")
wday(d2[1,1])
d2[1,1]
d2[1,2\]
d2[1,]
a<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
a1<-a[,1]
a2<-as.character(a1)
b1<-a[,2]
b2<-as.character(b1)
c1<-paste(a2,b2)
c1[1]
c2<-as.POSIXct(c1, format="%d/%m/%Y %H:%M:%S")
c2[1]
e1<-as.POSIXct("2007-02-01", format="%Y-%m-%d")
e2<-as.POSIXct("2007-02-03", format="%Y-%m-%d")
a[,1]<-c2
a[1,1]
d1<-subset(a,a[,1]>=e1)
d2<-subset(d1,d1[,1]<e2)
d2[1,1]
d1[1,1]
l<- colnames(d2)
#Take out the Global Active Power Column
f1<-d2[[3]]
#factors to character vectors
f2<-as.character(f1)
# Character Vector to numeric
f3<-as.numeric(f2)
g1<-c(d2[,1],f3)
f1
g1
dim(g1)
g1[1,1]
g1[1]
g1[2]
g1[3]
g1[4]
g1[5]
g1<-data.frame(d2[1,],f3)
g1<-data.frame(d2[,1],f3)
View(`g1`)
d3<-wday(d2[1,])
d3<-weekdays(d2[1,])
class(d2[1,])
class(d2[[1,]])
d2[[1,]]
d3<-d2[1,]
d4<-weekdays[d3]
class[d3[1]]
class(d3[1])
class(d3[[1])
class(d3[[1]])
d4<-d3[[1]]
class(d4)
d5<-weekday(d4)
d5<-weekdays(d4)
d5
d5<-as.date(d4)
d5<-as.Date(d4)
d6<-weekdays(d5)
class(d6)
d6
d4
d3
d3<-d2[,1]
# Removes the colunn from the dataframe
d4<-d3[[1]]
# removes the POSIXt column from the dataframe
d5<-as.Date(d4)
# Converts POSIXt to date
d5<-as.Date(d4)
# Convert the dates to weekdays
d6<-weekdays(d5)
d6
d3
d4
class(d3)
d4<-as.Date(d3)
d4
d5<-weekdays(d4)
d5
plot(d5,f3)
plot(f3)
plot(as.character(d5),f3)
library(lubridate)
d5<-wday(d4)
d5<-wday(d4,label=TRUE)
d5
plot(d5,f3)
plot(f3)
plot(f3,lty=1)
plot(f3,lty=1)
plot(d4,f3)
d3[1]
d2[,1]
d2[1,1]
d2[2,1]
d3[2,1]
d3[2]
plot(d3,f3)
plot(d3,f3,xlab="Global Active Power (kilowatts)")
plot(d3,f3,ylab="Global Active Power (kilowatts)")
plot(d3,f3,xlab="",ylab="Global Active Power (kilowatts)")
class(d3)
plot(d3,f3,xlab="",ylab="Global Active Power (kilowatts)",type="l")
# Converting the plot to PNG
dev.copy(png,file="plot2.png")
# closing development device
dev.off()
l
plot(d3,d2[7],xlab="",ylab="Global Active Power (kilowatts)",type="l")
rm(d4,d5,d6)
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l")
plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red")
plot(d3,d2[,9],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="blue")
with(plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l"),plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red"))
with(plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l"),plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red"),plot(d3,d2[,9],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="blue"))
with(plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="black"),plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red"),plot(d3,d2[,9],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="blue"))
legend("topright")
legend("topright",legend="Sub_metering_1")
legend("topright",legend="Sub_metering_1",col="red")
legend("topright",legend="Sub_metering_1",col="red")
legend("topright",legend="Sub_metering_1",type="l",col="red")
legend("topright",legend="Sub_metering_1",pch=2,col="red")
legend("topright",legend="Sub_metering_1",pch=3,col="red")
legend("topright",legend="Sub_metering_1",pch=4,col="red")
legend("topright",legend="Sub_metering_1",pch=-,col="red")
legend("topright",legend="Sub_metering_1",pch="-",col="red")
abline(d3,d2[,9])
points(d3,d2[,7],type="l",col="blue")
points(d3,d2[,8],type="l",col="blue")
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
points(d3,d2[,7],type="l",col="red")
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
points(d3,d2[,7],type="l",col="black")
points(d3,d2[,8],type="l",col="red")
points(d3,d2[,9],type="l",col="blue")
legend(topright)
View(`d2`)
# Intializes the Plot
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
# plots the time series graph for submetering_1
points(d3,d2[,7],type="l",col="black")
# Adding in submetering_2 in red
points(d3,d2[,8],type="l",col="red")
# adding in submetering_3 in blue
points(d3,d2[,9],type="l",col="blue")
d2[,8]
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
points(d3,d2[,8],type="l",col="red")
d2[,8]
class(d2[,8])
d3=as.numeric(as.character(d2[,7:9]))
d3
as.character(d2[,7:9])
d3<-as.character(d2[,7:9])
d4<-as.numeric(d3)
d4
g1=as.numeric(as.character(d2[,7]))
g1
rm(g1)
g1=as.numeric(as.character(d2[,7]))
g2=as.numeric(as.character(d2[,8]))
g3=as.numeric(as.character(d2[,9]))
plot(d3,g1,xlab="",ylab="Global Active Power (kilowatts)",type="n")
d3<-d2[,1]
plot(d3,g1,xlab="",ylab="Global Active Power (kilowatts)",type="n")
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
points(d3,g1,type="l",col="black")
points(d3,g2,type="l",col="red")
points(d3,g3,type="l",col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty,col=c("black","red","blue"))
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty,col=c("black","red","blue"))
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
# Intializes the Plot
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
# plots the time series graph for submetering_1
points(d3,g1,type="l",col="black")
# Adding in submetering_2 in red
points(d3,g2,type="l",col="red")
# adding in submetering_3 in blue
points(d3,g3,type="l",col="blue")
# Adds in the legend
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
# loads the library necessary for creating the png file
library("datasets")
# Converting the plot to PNG
dev.copy(png,file="plot3.png")
# closing development device
dev.off()
# loads the library necessary for creating the png file
library("datasets")
# Converting the plot to PNG
dev.copy(png,file="plot3.png")
# closing development device
dev.off()
legend(2,2,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
legend(2,2,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
legend(xy.coords(2,2),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
legend(xy.coords(0,0),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
legend("0,0",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
# Intializes the Plot
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
# plots the time series graph for submetering_1
points(d3,g1,type="l",col="black")
# Adding in submetering_2 in red
points(d3,g2,type="l",col="red")
# adding in submetering_3 in blue
points(d3,g3,type="l",col="blue")
# Adds in the legend
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
png("./plot3.png")
png(filename="./plot3.png")
dev.off()
png(filename="./plot3.png")
# Intializes the Plot
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
# plots the time series graph for submetering_1
points(d3,g1,type="l",col="black")
# Adding in submetering_2 in red
points(d3,g2,type="l",col="red")
# adding in submetering_3 in blue
points(d3,g3,type="l",col="blue")
# Adds in the legend
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
dev.off()
plot(a2,type="l",ylab="emissions",main="Total Emissions over Time")
rm(a,d1,d2,a1,a2,b1,b2,c1,c2,d3,d4)
rm(e1,e2,f1,f2,f3,g1,g2,g3,l)
getwd()
setwd("./c5p1")
unzip(repdata-data-activity)
unzip(repdata-data-activity.zip)
unzip("repdata-data-activity.zip"")
unzip("repdata-data-activity.zip")
a<-read.csv("activity.zip")
setwd("./c5p1/RepData_PeerAssessment1")
setwd("c/R/c5p1/RepData_PeerAssessment1")
setwd("c:/R/c5p1/RepData_PeerAssessment1")
unzip("activity.zip")
a<-read.csv("activity.csv")
View(a)
class(a)
a1<-aggregate(a,by=date,Fun=sum)
a1<-aggregate(a,by=date,FUN=sum)
a1<-aggregate.data.frame(a,by=date,FUN=sum)
a1<-aggregate.data.frame(steps~date,by=date,FUN=sum)
a1<-aggregate(steps~date,by=date,FUN=sum)
a1<-aggregate(steps~date,a = dat,FUN=sum)
a1<-aggregate(steps ~ date,a = dat,FUN=sum)
data$steps
a1<-aggregate(a,by=list(date,steps),a = dat,FUN=sum)
class(mtcars)
a1<-aggregate(steps ~ date,a = dat,FUN=sum,na.rm=true)
b<-mtcars
b1<-aggregate(b,by=list(cyl,vs),FUN=mean, na.rm=true)
library('dplyr')
b1<-aggregate(b,by=list(cyl,vs),FUN=mean, na.rm=true)
b1<-aggregate(mtcars,by=list(cyl,vs),FUN=mean, na.rm=true)
a1<-agregate(steps ~date,data=am,sum)
a1<-aggregate(steps ~date,data=am,sum)
a1<-aggregate(steps ~date,data=a,sum)
View(`a1`)
hist(a1$steps)
a2<-apply(a1,MARGIN=c(,2) ,FUN=mean)
a2<-mean(a1[,2])
View(a)
a1[,2]
a3<-mean(a1[,2])
a3<-median(a1[,2])
a3
plot(a1[,1],a1[,2],type='l')
plot(a1[,1],a1[,2],type='l')
plot(a1[,1],a1[,2],type="l")
plot(a1,main="steps per day")
plot(main="steps per day")
View(a)
a4<-aggregate(steps ~interval,data=a,mean)
View(`a4`)
plot(a4,type="l")
plot(a4,type="l",main="Average Number of Steps for each Interval")
a5<-max(a4)
a5<-max(a4[,2])
match(a5,a4)
a5
match(a5,a4[,2])
a4[104,1]
a4[104,2]
a6<-a4[match(a5,a4[,2]),1]
View(`a4`)
View(a)
a7<-sum(is.na(a[1,]))
a7
a[1,]
a[,1]
a7<-sum(is.na(a[,1]))
b1<-length(a[,1])
View(`a4`)
View(a)
match(a4[,1],b[i,3])
i=1
match(a4[,1],b[i,3])
b[i,3]
View(b)
b<-a
match(a4[,1],b[i,3])
b[i,3]
View(b)
View(`a4`)
head(a4[,1])
match(b[i,3],a4[,1])
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
View(b)
View(`a1`)
View(`a1`)
b1<-length(a[,1])
## creating the array that will have values replaced in
b=a
## Replacing NAs
for (i=1:b1)
{
if(is.na(b[i,1])
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
}
## finding the total number of steps per day
b2<-aggregate(steps ~date,data=b,sum)
for (i=1:b1) {
if(is.na(b[i,1])
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
}
for (i in 1:b1) {
if(is.na(b[i,1])
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
}
is.na(b[i,1]
(is.na(b[i,1])
(is.na(b[1,1])
is.na(b[1,1])
for (i in 1:b1) {
if(is.na(b[i,1])
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
}
for (i in 1:b1) {
if(is.na(b[i,1]))
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
}
for (i in 1:b1) {
if(is.na(b[i,1])){
b[i,1]<-a4[match(b[i,3],a4[,1]),2]
}
}
View(b)
## Mean
b3<-mean(b2[,2])
## Median
b3<-mean(b2[,2])
## Mean
b3<-mean(b2[,2])
## Median
b5<-median(b2[,2])
View(`b2`)
## finding the total number of steps per day
b2<-aggregate(steps ~date,data=b,sum)
View(`b2`)
hist(b2$steps)
## Mean
b3<-mean(b2[,2])
## Median
b5<-median(b2[,2])
## Mean
b3<-mean(b2[,2])
## Median
b4<-median(b2[,2])
rm(b5)
i=1
a3
View(`b2`)
mean(b2[,2]
mean(b2[,2])\
mean(b2[,2])
median(b2[,2])
median(a2[,2])
median(a1[,2])
hist(b2$steps)
hist(a1$steps)
c<-b2[,2]-a1[,2]
View(`b2`)
View(a)
View(b)
c1<-weekdays(b[,2])
class(b)
class(b[,2])
c1<-weekdays(as.character(b[,2])
c1<-weekdays(as.character(b[,2]))
c1<-weekdays(as.date(as.character(b[,2])))
c1<-weekdays(as.Date(as.character(b[,2])))
class(c1)
c2<-as.factor(c1)
c3
c2
c1<-as.factor(weekdays(as.Date(as.character(b[,2]))))
rm(c2)
c1<-as.numeric(weekdays(as.Date(as.character(b[,2]))))
c1<-weekdays(as.Date(as.character(b[,2])))
i=0
for (i in 1:b1){
if(c1[i]="Saturday"|"Sunday"){c1[i]="Weekend"}
else {c1[i]="Weekday"}
}
c1[1]
c1[]="Tuesday"
c1[1]="Monday"
c1<-weekdays(as.Date(as.character(b[,2])))
i=1
c1[i]="Saturday"|"Sunday"
(c1[i]="Saturday"|"Sunday")
(c1[i]="Saturday"|c1[i]="Sunday")
(c1[i]="Saturday")
if(c1[i]="Sunday")
(c1[i]=="Saturday"|c1[i]=="Sunday")
c1<-weekdays(as.Date(as.character(b[,2])))
for (i in 1:b1){
if(c1[i]=="Saturday"|c1[i]=="Sunday"){c1[i]="Weekend"}
else {c1[i]="Weekday"}
}
c2<-as.factor(c1)
c2
d1 -
d<-cbind(b,c2)
View(d)
d1d1<-filter(d,c2=="Weekday")
d2<-filter(d,c2=="Weekend")
View(`d1d1`)
d1<-filter(d,c2=="Weekday")
rm(d1d1)
View(`d2`)
View(`d1`)
e1<-aggregate(steps ~interval,data=d1,average)
e1<-aggregate(steps ~interval,data=d1,mean)
e2<-aggregate(steps ~interval,data=d2,mean)
View(`e1`)
View(`e2`)
par(mfcol=1)
par(mfrow=2)
par("mfrow"=2)
mfrow=2
plot(a)
par()
par(mfrow=(2,1))
par(c(2,1))
plot(e1)
plot(e2)
mfrow=c(2,1)
plot(e1)
plot(e1)
mfrow=c(2,1)
par("mfrow")
par("mfrow"=c(2,1))
plot(e1)
par("mfrow"=c(2,1))
plot(e1,type="l")
plot(e2,type="l")
par("mfrow"=c(2,1))
plot(e1,type="l")
title("Weekday Data")
xlab("Interval in Minutes"")
xlab("Interval in Minutes")
plot(e1,type="l",xlab="Interval in Minutes",ylab="Number of Steps in the 5 Minute Interval")
title("Weekday Data")
par("mfrow"=c(2,1))
plot(e1,type="l",xlab="Interval in Minutes",ylab="Number of Steps in the 5 Minute Interval")
title("Weekday Data")
plot(e1,type="l",xlab="Interval in Minutes",ylab="Steps")
title("Weekday Data")
plot(e2,type="l",xlab="Interval in Minutes",ylab="Steps")
Title ("Weekend Data")
par("mfrow"=c(2,1))
plot(e1,type="l",xlab="Interval in Minutes",ylab="Steps")
title("Weekday Data")
plot(e2,type="l",xlab="Interval in Minutes",ylab="Steps")
Title ("Weekend Data")
title ("Weekend Data")
par("mfrow"=c(2,1))
plot(e1,type="l",xlab="Interval in Minutes",ylab="Steps")
title("Weekday Data")
plot(e2,type="l",xlab="Interval in Minutes",ylab="Steps")
title ("Weekend Data")
