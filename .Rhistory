mean(c7)
c8<-c9[1:30]
c9<-c8[1:30]
c7<-c6
c7[,3]<-as.numeric(c7[,3])
class(c7[,3])
mean(c7[,3])
View(`c7`)
c6
c6[,3]
View(`c6`)
d1<-arrange(c6,Gross.domestic.product.2012)
View(`d1`)
d1<-arrange(c6,X.4)
d1<-arrange(c6,X.3)
View(`d1`)
View(`d1`)
View(`c7`)
View(`c6`)
View(`c5`)
View(`c3`)
View(`c2`)
View(`c5`)
> c1<-merge(ed,gdp,by.x="X",by.y="CountryCode",all=TRUE)
Error in merge(ed, gdp, by.x = "X", by.y = "CountryCode", all = TRUE) :
object 'ed' not found
> ed<-read.csv("ed.csv")
> gdp<-read.csv("gdp.csv")
> View(ed)
> View(gdp)
> c1<-merge(ed,gdp,by.x="CountryCode",by.y="X")
> View(`c1`)
> c2<-arrange(c1,Gross.domestic.product.2012)
> View(`c2`)
> c3<-c2[36:224,]
> View(`c3`)
> c3<-c2[36:224,]
> c4<-arrange(c3,Income.Group)
> c5<-c4[,c(2,3,32,35)]
> View(`c5`)
> library('dplyr')
ed<-read.csv("ed.csv")
dp<-read.csv("gdp.csv")
c1<-merge(ed,gdp,by.x="CountryCode",by.y="X")
c2<-arrange(c1,Gross.domestic.product.2012)
c3<-c2[36:224,]
c3<-c2[36:224,]
c4<-arrange(c3,Income.Group)
c5<-c4[,c(2,3,32,35)]
library('dplyr')
c1<-merge(ed,gdp,by.x="CountryCode",by.y="X")
rm(dp,ed)
ed<-read.csv("ed.csv")
dp<-read.csv("gdp.csv")
c1<-merge(ed,gdp,by.x="CountryCode",by.y="X")
rm(dp,ed)
ed<-read.csv("ed.csv")
dp<-read.csv("gdp.csv")
c1<-merge(ed,gdp,by.x="CountryCode",by.y="X")
gdp<-read.csv("gdp.csv")
c1<-merge(ed,gdp,by.x="CountryCode",by.y="X")
c2<-arrange(c1,Gross.domestic.product.2012)
c3<-c2[36:224,]
c4<-arrange(c3,Income.Group)
c5<-c4[,c(2,3,32,35)]
library('dplyr')
View(`c5`)
arrange(c5,X.3)
c6<-arrange(c5,X.3)
View(`c6`)
c6<-arrange(c5,c5[3])
c6<-arrange(c5,labels(c5))
a1<-c6[,4]
a2<-as.numeric(,4)
a2<-as.numeric(a2[,4])
a2<-as.numeric(a1[,4])
a2<-a1[,4]
a2<-as.numeric(a1)
a3
a2
a2<-a1[,3]
rm(a1,a2)
a1<-c6[,3]
a1
a2<-as.numeric((as.character(a1)))
a2
c6[,3]<-as.numeric(as.character(c6[,3]))
View(`c6`)
c7<-arrange(c6,Gross.domestic.product.2012)
View(`c7`)
c8<-c7[1:38,]
View(`c8`)
filter(c8,Income.Group=="Lower middle income")
rm(a1,a2,c7,c6)
rm(c8,c5)
View(`c4`)
c5<-arrange(c4,Gross.domestic.product.2012)
View(`c5`)
rm(c5)
c5[,32]
c4[,32]
c4[,30]
View(`c3`)
rm(c4)
c4<-c3
c4[30]
c4[28]
c4[35]
c4[33]
c4[32]
c4[,32]<-as.numeric(as.character(c4[,32]))
View(`c4`)
c5<-arrange(c4,Gross.domestic.product.2012)
View(`c5`)
c5<-arrange(c4,-Gross.domestic.product.2012)
View(`c4`)
View(`c5`)
install.packages("stringr")
library(stringr)
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",idaho.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","./idaho.csv")
idaho<-read.csv("./idaho.csv")
View(idaho)
a1<-strsplit(names(data),"wgtp")
a1<-strsplit(names(data),"\\wgtp")
a1<-strsplit(names(idaho),"\\wgtp")
a1[[123]]
a1[123]
a1[1]
a1[[1]
a1[[1]]
rm(idaho,a1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ","./gdp.csv")
gdp<-read.csv("gdp.csv")
View(gdp)
a1<-gdp[,5]
class(a1)
a2<-as.character(a1)
class(a2)
gsub(",","",a2)
a2<-as.character(a1)
a2
a1
a1
View(gdp)
a2<-a1[5:194]
a3<-as.character(a2)
a4<-gsub(",","",a3)
a5<-numeric(a4)
a5<-as.numeric(a4)
mean(a5)
rm(a1,a2,a3,a4,a5)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","./ed.csv")
ed<-read.csv("./ed.csv")
View(ed)
a1<-merge(ed,gdp,by.x="CountryCode",by.y="X",all=TRUE)
View(gdp)
View(`a1`)
a2<-names(a1)
a2
a3<-a1[,10]
a4<-as.character(a3)
a4
a5<-grepl("Jun",a1$Special.Notes)
a6<-as.numeric(a5)
a6
sum(a6)
a7<-grep("Jun",a1$Special.Notes)
a7
rm(a1,ed,gpd,a2,a3,a4,a5,a6,a7)
rm(gdp)
install.package("quantmod")
install.package("http://www.quantmod.com")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
index(amzn)
a1<-index(amzn)
a1
class(a1)
a2<-grep("2012",a1)
length(a1)
a3<-a2[a2]
a2<-grepl("2012",a1)
a3<-a2[a2]
a3<-a1[a2]
length(a3)
a4<-wday(a3)
library(lubridate)
a4<-wday(a3)
a4<-wday(a3,label=true)
a4<-wday(a3)
a5<-grep("2",a4)
rm(amzn,a1,a2,a3,a4,a5,sampleTimes)
gdp<-read.csv("gdp.csv")
View(gdp)
grep("^United",countryNames),3
grep("^United",gdp$X.2),3
grep("^United",gdp$X.2),3
grep("^United","gdp$X.2"),3
a1<-gdp[,4]
a2<-as.character(a1)
grep("^United",a2),3
grep("^United",a2)
ed<-read.csv("ed.csv")
View(ed)
grep("june",ed$Special.Notes)
grep("June",ed$Special.Notes)
a3<-grep("June",ed$Special.Notes)
a4<-ed$Special.Notes[a3]
a4
length(a4)
# This is the R file to generate plot 1 for exploratory data techniques Project 1
# Read in the data
a<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
# takes the date out
a1<-a[,1]
#converts the factors to character vectors
a2<-as.character(a1)
#takes thetime out
b1<-a[,2]
#character vector
b2<-as.character(b1)
# Pasting Together the date and time columns
c1<-paste(a2,b2)
# merges the time and date columns
c2<-as.POSIXct(c1, format="%d/%m/%Y %H:%M:%S")
#replaces the date colum with the POSIXct values
a[,1]<-c2
# getting the desired date ranges in POSIXct form to allow subsetting to be used
e1<-as.POSIXct("2007-02-01", format="%Y-%m-%d")
e2<-as.POSIXct("2007-02-03", format="%Y-%m-%d")
# Getting the subset of the data between Date 2007-02-01 and 2007-02-02
d1<-subset(a,a[,1]>=e1)
d2<-subset(d1,d1[,1]<e2)
#create a vector of the lables
l<- colnames(d2)
#Take out the Global Active Power Column
f1<-d2[[3]]
#factors to character vectors
f2<-as.character(f1)
# Character Vector to numeric
f3<-as.numeric(f2)
#Histogram of Global Active Power
hist(f3, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
# loads the library necessary for creating the png file
library("datasets")
wday(d2[1,1])
d2[1,1]
d2[1,2\]
d2[1,]
a<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
a1<-a[,1]
a2<-as.character(a1)
b1<-a[,2]
b2<-as.character(b1)
c1<-paste(a2,b2)
c1[1]
c2<-as.POSIXct(c1, format="%d/%m/%Y %H:%M:%S")
c2[1]
e1<-as.POSIXct("2007-02-01", format="%Y-%m-%d")
e2<-as.POSIXct("2007-02-03", format="%Y-%m-%d")
a[,1]<-c2
a[1,1]
d1<-subset(a,a[,1]>=e1)
d2<-subset(d1,d1[,1]<e2)
d2[1,1]
d1[1,1]
l<- colnames(d2)
#Take out the Global Active Power Column
f1<-d2[[3]]
#factors to character vectors
f2<-as.character(f1)
# Character Vector to numeric
f3<-as.numeric(f2)
g1<-c(d2[,1],f3)
f1
g1
dim(g1)
g1[1,1]
g1[1]
g1[2]
g1[3]
g1[4]
g1[5]
g1<-data.frame(d2[1,],f3)
g1<-data.frame(d2[,1],f3)
View(`g1`)
d3<-wday(d2[1,])
d3<-weekdays(d2[1,])
class(d2[1,])
class(d2[[1,]])
d2[[1,]]
d3<-d2[1,]
d4<-weekdays[d3]
class[d3[1]]
class(d3[1])
class(d3[[1])
class(d3[[1]])
d4<-d3[[1]]
class(d4)
d5<-weekday(d4)
d5<-weekdays(d4)
d5
d5<-as.date(d4)
d5<-as.Date(d4)
d6<-weekdays(d5)
class(d6)
d6
d4
d3
d3<-d2[,1]
# Removes the colunn from the dataframe
d4<-d3[[1]]
# removes the POSIXt column from the dataframe
d5<-as.Date(d4)
# Converts POSIXt to date
d5<-as.Date(d4)
# Convert the dates to weekdays
d6<-weekdays(d5)
d6
d3
d4
class(d3)
d4<-as.Date(d3)
d4
d5<-weekdays(d4)
d5
plot(d5,f3)
plot(f3)
plot(as.character(d5),f3)
library(lubridate)
d5<-wday(d4)
d5<-wday(d4,label=TRUE)
d5
plot(d5,f3)
plot(f3)
plot(f3,lty=1)
plot(f3,lty=1)
plot(d4,f3)
d3[1]
d2[,1]
d2[1,1]
d2[2,1]
d3[2,1]
d3[2]
plot(d3,f3)
plot(d3,f3,xlab="Global Active Power (kilowatts)")
plot(d3,f3,ylab="Global Active Power (kilowatts)")
plot(d3,f3,xlab="",ylab="Global Active Power (kilowatts)")
class(d3)
plot(d3,f3,xlab="",ylab="Global Active Power (kilowatts)",type="l")
# Converting the plot to PNG
dev.copy(png,file="plot2.png")
# closing development device
dev.off()
l
plot(d3,d2[7],xlab="",ylab="Global Active Power (kilowatts)",type="l")
rm(d4,d5,d6)
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l")
plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red")
plot(d3,d2[,9],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="blue")
with(plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l"),plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red"))
with(plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l"),plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red"),plot(d3,d2[,9],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="blue"))
with(plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="black"),plot(d3,d2[,8],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="red"),plot(d3,d2[,9],xlab="",ylab="Global Active Power (kilowatts)",type="l",col="blue"))
legend("topright")
legend("topright",legend="Sub_metering_1")
legend("topright",legend="Sub_metering_1",col="red")
legend("topright",legend="Sub_metering_1",col="red")
legend("topright",legend="Sub_metering_1",type="l",col="red")
legend("topright",legend="Sub_metering_1",pch=2,col="red")
legend("topright",legend="Sub_metering_1",pch=3,col="red")
legend("topright",legend="Sub_metering_1",pch=4,col="red")
legend("topright",legend="Sub_metering_1",pch=-,col="red")
legend("topright",legend="Sub_metering_1",pch="-",col="red")
abline(d3,d2[,9])
points(d3,d2[,7],type="l",col="blue")
points(d3,d2[,8],type="l",col="blue")
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
points(d3,d2[,7],type="l",col="red")
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
points(d3,d2[,7],type="l",col="black")
points(d3,d2[,8],type="l",col="red")
points(d3,d2[,9],type="l",col="blue")
legend(topright)
View(`d2`)
# Intializes the Plot
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
# plots the time series graph for submetering_1
points(d3,d2[,7],type="l",col="black")
# Adding in submetering_2 in red
points(d3,d2[,8],type="l",col="red")
# adding in submetering_3 in blue
points(d3,d2[,9],type="l",col="blue")
d2[,8]
plot(d3,d2[,7],xlab="",ylab="Global Active Power (kilowatts)",type="n")
points(d3,d2[,8],type="l",col="red")
d2[,8]
class(d2[,8])
d3=as.numeric(as.character(d2[,7:9]))
d3
as.character(d2[,7:9])
d3<-as.character(d2[,7:9])
d4<-as.numeric(d3)
d4
g1=as.numeric(as.character(d2[,7]))
g1
rm(g1)
g1=as.numeric(as.character(d2[,7]))
g2=as.numeric(as.character(d2[,8]))
g3=as.numeric(as.character(d2[,9]))
plot(d3,g1,xlab="",ylab="Global Active Power (kilowatts)",type="n")
d3<-d2[,1]
plot(d3,g1,xlab="",ylab="Global Active Power (kilowatts)",type="n")
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
points(d3,g1,type="l",col="black")
points(d3,g2,type="l",col="red")
points(d3,g3,type="l",col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty,col=c("black","red","blue"))
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty,col=c("black","red","blue"))
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
# Intializes the Plot
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
# plots the time series graph for submetering_1
points(d3,g1,type="l",col="black")
# Adding in submetering_2 in red
points(d3,g2,type="l",col="red")
# adding in submetering_3 in blue
points(d3,g3,type="l",col="blue")
# Adds in the legend
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
# loads the library necessary for creating the png file
library("datasets")
# Converting the plot to PNG
dev.copy(png,file="plot3.png")
# closing development device
dev.off()
# loads the library necessary for creating the png file
library("datasets")
# Converting the plot to PNG
dev.copy(png,file="plot3.png")
# closing development device
dev.off()
legend(2,2,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
legend(2,2,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
legend(xy.coords(2,2),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
legend(xy.coords(0,0),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
legend("0,0",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
# Intializes the Plot
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
# plots the time series graph for submetering_1
points(d3,g1,type="l",col="black")
# Adding in submetering_2 in red
points(d3,g2,type="l",col="red")
# adding in submetering_3 in blue
points(d3,g3,type="l",col="blue")
# Adds in the legend
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
png("./plot3.png")
png(filename="./plot3.png")
dev.off()
png(filename="./plot3.png")
# Intializes the Plot
plot(d3,g1,xlab="",ylab="Energy sub metering",type="n")
# plots the time series graph for submetering_1
points(d3,g1,type="l",col="black")
# Adding in submetering_2 in red
points(d3,g2,type="l",col="red")
# adding in submetering_3 in blue
points(d3,g3,type="l",col="blue")
# Adds in the legend
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),lty=1,col=c("black","red","blue"))
dev.off()
plot(a2,type="l",ylab="emissions",main="Total Emissions over Time")
rm(a,d1,d2,a1,a2,b1,b2,c1,c2,d3,d4)
rm(e1,e2,f1,f2,f3,g1,g2,g3,l)
setwd("c:/R/c5p1/RepData_PeerAssessment1")
unzip("activity.zip")
a<-read.csv("activity.csv")
library('dplyr')
a1<-aggregate(steps ~date,data=a,sum)
hist(a1$steps, xlab="Steps per Day",ylab="Days",main="Histogram of Steps per Day")
a2<-mean(a1[,2])
a3<-median(a1[,2])
print("mean")
print(mean)
print("mean"=a2)
print("mean",a2)
a2
print("Mean")
a2
print ("Median")
a3
24*60/5
*60
288*60
24*60
View(a)
24*60*60/2360
knit(PA1_template.Rmd)
library(knitr)
knit(PA1_template.Rmd)
knit("PA1_template.Rmd")
knit2html("PA1_template.md")
